name: Release

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, labeled, unlabeled]
  workflow_dispatch: # Allows manual invocation
  # TODO: Uncomment to trigger on tags
  # push:
  #   tags:
  #     - "v*.*.*" # Triggers on tags like v1.0.0

permissions:
  contents: write
  actions: read
  checks: write
  pull-requests: write
  packages: write

jobs:
  check-release-label:
    runs-on: ubuntu-latest
    outputs:
      has-release-label: ${{ steps.check-release-label.outputs.has-release-label }}
    steps:
      - name: Check for run-ci label
        id: check-release-label
        run: |
          if [[ "${{ contains(github.event.pull_request.labels.*.name, 'run-ci-release') }}" == "true" ]]; then
            echo "has-release-label=true" >> $GITHUB_OUTPUT
          else
            echo "has-release-label=false" >> $GITHUB_OUTPUT
          fi

  build:
    needs: check-release-label
    if: needs.check-release-label.outputs.has-release-label == 'true'
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # Install and cache JS toolchain and dependencies (node_modules)
      - name: Setup JS
        uses: ./.github/actions/js-setup

      - name: Debug Foundry
        run: anvil --version || echo "anvil not found"

      - name: Build
        run: pnpm run build-all

      - name: Typecheck
        run: pnpm run typecheck-all

      - name: Prettier
        run: pnpm run prettier-all:check

  test-pre-prod:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # Install and cache JS toolchain and dependencies (node_modules)
      - name: Setup JS
        uses: ./.github/actions/js-setup

      - name: Build
        run: pnpm run build-all

      - name: Debug Foundry
        run: anvil --version || echo "anvil not found"

      - name: Test (preprod)
        run: anvil & pnpm run test-all && lsof -t -i tcp:8545 | xargs kill
        env:
          API_PUBLIC_KEY: ${{ secrets.PREPROD_API_PUBLIC_KEY }}
          API_PRIVATE_KEY: ${{ secrets.PREPROD_API_PRIVATE_KEY }}
          BASE_URL: ${{ secrets.PREPROD_BASE_URL }}
          ORGANIZATION_ID: ${{ secrets.PREPROD_ORGANIZATION_ID }}
          PRIVATE_KEY_ID: ${{ secrets.PREPROD_PRIVATE_KEY_ID }}
          EXPECTED_PRIVATE_KEY_ETH_ADDRESS: ${{ secrets.PREPROD_EXPECTED_PRIVATE_KEY_ETH_ADDRESS }}
          EXPECTED_PRIVATE_KEY_ETH_ADDRESS_2: ${{ secrets.PREPROD_EXPECTED_PRIVATE_KEY_ETH_ADDRESS_2 }}
          EXPECTED_WALLET_ACCOUNT_ETH_ADDRESS: ${{ secrets.PREPROD_EXPECTED_WALLET_ACCOUNT_ETH_ADDRESS }}
          EXPECTED_WALLET_ACCOUNT_ETH_ADDRESS_2: ${{ secrets.PREPROD_EXPECTED_WALLET_ACCOUNT_ETH_ADDRESS_2 }}
          BANNED_TO_ADDRESS: ${{ secrets.PREPROD_BANNED_TO_ADDRESS }}
          SOLANA_TEST_ORG_API_PRIVATE_KEY: ${{ secrets.SOLANA_TEST_ORG_API_PRIVATE_KEY }}
          WALLET_ID: ${{ secrets.PREPROD_WALLET_ID }}

  test-prod:
    runs-on: ubuntu-latest
    needs: test-pre-prod
    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # Install and cache JS toolchain and dependencies (node_modules)
      - name: Setup JS
        uses: ./.github/actions/js-setup

      - name: Build
        run: pnpm run build-all

      - name: Debug Foundry setup
        run: |
          echo "Checking Foundry binaries:"
          ls -la ~/.foundry/bin || echo "No Foundry binaries found"
          which anvil || echo "anvil not found"
          echo "PATH contents:"
          echo $PATH
          echo "GITHUB_PATH contents:"
          cat $GITHUB_PATH || echo "No GITHUB_PATH file"
          anvil --version || echo "anvil not installed"
        shell: bash

      - name: Test (prod)
        run: anvil & pnpm run test-all && lsof -t -i tcp:8545 | xargs kill
        env:
          API_PUBLIC_KEY: ${{ secrets.API_PUBLIC_KEY }}
          API_PRIVATE_KEY: ${{ secrets.API_PRIVATE_KEY }}
          BASE_URL: "https://api.turnkey.com"
          ORGANIZATION_ID: ${{ secrets.ORGANIZATION_ID }}
          PRIVATE_KEY_ID: ${{ secrets.PRIVATE_KEY_ID }}
          EXPECTED_PRIVATE_KEY_ETH_ADDRESS: ${{ secrets.EXPECTED_PRIVATE_KEY_ETH_ADDRESS }}
          EXPECTED_PRIVATE_KEY_ETH_ADDRESS_2: ${{ secrets.EXPECTED_PRIVATE_KEY_ETH_ADDRESS_2 }}
          EXPECTED_WALLET_ACCOUNT_ETH_ADDRESS: ${{ secrets.EXPECTED_WALLET_ACCOUNT_ETH_ADDRESS }}
          EXPECTED_WALLET_ACCOUNT_ETH_ADDRESS_2: ${{ secrets.EXPECTED_WALLET_ACCOUNT_ETH_ADDRESS_2 }}
          BANNED_TO_ADDRESS: "0x6F72eDB2429820c2A0606a9FC3cA364f5E9b2375"
          SOLANA_TEST_ORG_API_PRIVATE_KEY: ${{ secrets.SOLANA_TEST_ORG_API_PRIVATE_KEY }}
          WALLET_ID: ${{ secrets.WALLET_ID }}

  publish:
    runs-on: ubuntu-latest
    environment: production # require manual approval for production deployments
    needs: test-prod
    steps:
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0 # fetch all history for changelog generation

      # Install and cache JS toolchain and dependencies (node_modules)
      - name: Setup JS
        uses: ./.github/actions/js-setup

      - name: Debug changeset config
        run: |
          ls -la .changeset/
          cat .changeset/config.json || echo "config.json not found"
          ls -la .changeset/custom-changelog.js || echo "custom-changelog.js not found"

      - name: Debug npm config
        run: |
          echo "NPM_TOKEN is set: ${NPM_TOKEN:+set}"
          cat .npmrc || echo "No .npmrc found"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Version and Publish SDK packages to npm
        uses: changesets/action@06245a4e0a36c064a573d4150030f5ec548e4fcc # v1.4.10
        with:
          version: pnpm changeset version # updates package versions and changelogs
          publish: pnpm publish # publish to npm
          createGithubReleases: true
          commit: "chore: release packages"
          title: "Release ${{ github.ref_name }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # for changelog links
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }} # for npm publish

