name: Beta Release

on:
  workflow_dispatch:
  push:
    branches:
      - amir/sdk-js
    paths:
      - ".changeset/**" # only trigger on changes to changesets

permissions:
  contents: write
  packages: write

concurrency:
  group: beta-release
  cancel-in-progress: false

jobs:
  beta-release:
    runs-on: ubuntu-latest
    outputs:
      version_commit: ${{ steps.version-sha.outputs.sha }}
      has_changesets: ${{ steps.has_changesets.outputs.has }}
    steps:
      - name: Checkout beta branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Setup JS
        uses: ./.github/actions/js-setup

      - name: Ensure there are pending changesets
        id: has_changesets
        run: |
          pnpm -w changeset status --output=JSON > /tmp/plan.json || echo '{}' > /tmp/plan.json
          COUNT=$(jq '.changesets | length' /tmp/plan.json 2>/dev/null || echo 0)
          echo "count=$COUNT" >> "$GITHUB_OUTPUT"
          if [ "$COUNT" -gt 0 ]; then
            echo "has=true" >> "$GITHUB_OUTPUT"
          else
            echo "has=false" >> "$GITHUB_OUTPUT"
            echo "No pending changesets; this job will no-op."
          fi

      - name: Configure Git user
        if: steps.has_changesets.outputs.count != '0'
        run: |
          git config user.name "tkhq-deploy"
          git config user.email "github@turnkey.engineering"

      - name: Version (Changesets) + your version script
        if: steps.has_changesets.outputs.count != '0'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pnpm -w changeset version
          pnpm run version
          pnpm install -r

      - name: Commit & push version bumps # [skip ci] so that this commit does not trigger another workflow run
        if: steps.has_changesets.outputs.count != '0'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! git diff --quiet; then
            git add -A
            git commit -m "chore: beta version bump [skip ci]"
            git push --no-verify
          else
            echo "No changes to commit"
          fi

      - name: Push branch + tags # push the updated branch and any tags created by changeset version
        if: steps.has_changesets.outputs.count != '0'
        run: |
          git push --follow-tags origin HEAD:"${{ github.ref_name }}"

      - name: Capture versioned commit SHA
        if: steps.has_changesets.outputs.count != '0'
        id: version-sha
        run: echo "sha=$(git rev-parse HEAD)" >> "$GITHUB_OUTPUT"

      - name: Build
        if: steps.has_changesets.outputs.count != '0'
        run: pnpm run build-all

      - name: Typecheck
        if: steps.has_changesets.outputs.count != '0'
        run: pnpm run typecheck-all

      - name: Prettier
        if: steps.has_changesets.outputs.count != '0'
        run: pnpm run prettier-all:check

      - name: Upload beta release artifacts
        if: steps.has_changesets.outputs.count != '0'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: beta-release-artifacts-${{ github.run_id }}
          path: |
            packages/**
            !packages/*/node_modules
            pnpm-lock.yaml
            pnpm-workspace.yaml
            .changeset/**
          retention-days: 7

  test-pre-prod:
    if: needs.beta-release.outputs.has_changesets == 'true'
    runs-on: ubuntu-latest
    needs: beta-release
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0 # required for git tags and history
          ref: ${{ needs.beta-release.outputs.version_commit }}

      - name: Setup JS
        uses: ./.github/actions/js-setup

      - name: Download release artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: beta-release-artifacts-${{ github.run_id }}
          path: _artifact

      - name: Overlay artifact snapshot
        run: |
          mkdir -p packages .changeset
          rsync -a --delete ./_artifact/packages/ ./packages/
          cp -f ./_artifact/pnpm-lock.yaml ./pnpm-lock.yaml || true
          cp -f ./_artifact/pnpm-workspace.yaml ./pnpm-workspace.yaml || true
          rsync -a ./_artifact/.changeset/ ./.changeset/ || true

      - name: Install latest dependencies
        run: pnpm install -r --frozen-lockfile

      - name: Test (preprod)
        run: anvil & PN=$!; pnpm run test-all; RC=$?; lsof -t -i tcp:8545 | xargs -r kill; wait $PN || true; exit $RC
        env:
          API_PUBLIC_KEY: ${{ secrets.PREPROD_API_PUBLIC_KEY }}
          API_PRIVATE_KEY: ${{ secrets.PREPROD_API_PRIVATE_KEY }}
          BASE_URL: ${{ secrets.PREPROD_BASE_URL }}
          ORGANIZATION_ID: ${{ secrets.PREPROD_ORGANIZATION_ID }}
          PRIVATE_KEY_ID: ${{ secrets.PREPROD_PRIVATE_KEY_ID }}
          EXPECTED_PRIVATE_KEY_ETH_ADDRESS: ${{ secrets.PREPROD_EXPECTED_PRIVATE_KEY_ETH_ADDRESS }}
          EXPECTED_PRIVATE_KEY_ETH_ADDRESS_2: ${{ secrets.PREPROD_EXPECTED_PRIVATE_KEY_ETH_ADDRESS_2 }}
          EXPECTED_WALLET_ACCOUNT_ETH_ADDRESS: ${{ secrets.PREPROD_EXPECTED_WALLET_ACCOUNT_ETH_ADDRESS }}
          EXPECTED_WALLET_ACCOUNT_ETH_ADDRESS_2: ${{ secrets.PREPROD_EXPECTED_WALLET_ACCOUNT_ETH_ADDRESS_2 }}
          BANNED_TO_ADDRESS: ${{ secrets.PREPROD_BANNED_TO_ADDRESS }}
          SOLANA_TEST_ORG_API_PRIVATE_KEY: ${{ secrets.SOLANA_TEST_ORG_API_PRIVATE_KEY }}
          WALLET_ID: ${{ secrets.PREPROD_WALLET_ID }}

  test-prod:
    if: needs.beta-release.outputs.has_changesets == 'true'
    runs-on: ubuntu-latest
    needs: [beta-release, test-pre-prod]
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0 # required for git tags and history
          ref: ${{ needs.beta-release.outputs.version_commit }}

      - name: Setup JS
        uses: ./.github/actions/js-setup

      - name: Download beta-release artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: beta-release-artifacts-${{ github.run_id }}
          path: _artifact

      - name: Overlay artifact snapshot
        run: |
          mkdir -p packages .changeset
          rsync -a --delete ./_artifact/packages/ ./packages/
          cp -f ./_artifact/pnpm-lock.yaml ./pnpm-lock.yaml || true
          cp -f ./_artifact/pnpm-workspace.yaml ./pnpm-workspace.yaml || true
          rsync -a ./_artifact/.changeset/ ./.changeset/ || true

      - name: Install latest dependencies
        run: pnpm install -r --frozen-lockfile

      - name: Test (prod)
        run: anvil & PN=$!; pnpm run test-all; RC=$?; lsof -t -i tcp:8545 | xargs -r kill; wait $PN || true; exit $RC
        env:
          API_PUBLIC_KEY: ${{ secrets.API_PUBLIC_KEY }}
          API_PRIVATE_KEY: ${{ secrets.API_PRIVATE_KEY }}
          BASE_URL: "https://api.turnkey.com"
          ORGANIZATION_ID: ${{ secrets.ORGANIZATION_ID }}
          PRIVATE_KEY_ID: ${{ secrets.PRIVATE_KEY_ID }}
          EXPECTED_PRIVATE_KEY_ETH_ADDRESS: ${{ secrets.EXPECTED_PRIVATE_KEY_ETH_ADDRESS }}
          EXPECTED_PRIVATE_KEY_ETH_ADDRESS_2: ${{ secrets.EXPECTED_PRIVATE_KEY_ETH_ADDRESS_2 }}
          EXPECTED_WALLET_ACCOUNT_ETH_ADDRESS: ${{ secrets.EXPECTED_WALLET_ACCOUNT_ETH_ADDRESS }}
          EXPECTED_WALLET_ACCOUNT_ETH_ADDRESS_2: ${{ secrets.EXPECTED_WALLET_ACCOUNT_ETH_ADDRESS_2 }}
          BANNED_TO_ADDRESS: "0x6F72eDB2429820c2A0606a9FC3cA364f5E9b2375"
          SOLANA_TEST_ORG_API_PRIVATE_KEY: ${{ secrets.SOLANA_TEST_ORG_API_PRIVATE_KEY }}
          WALLET_ID: ${{ secrets.WALLET_ID }}

  publish-beta-dry-run:
    if: needs.beta-release.outputs.has_changesets == 'true'
    runs-on: ubuntu-latest
    needs: [beta-release, test-prod]
    environment: production # require manual approval for beta deployments
    steps:
      - name: Checkout versioned commit
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ needs.beta-release.outputs.version_commit }}
          fetch-depth: 0

      - name: Setup JS
        uses: ./.github/actions/js-setup

      - name: Download beta-release artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: beta-release-artifacts-${{ github.run_id }}
          path: _artifact

      - name: Overlay artifact snapshot
        run: |
          mkdir -p packages .changeset
          rsync -a --delete ./_artifact/packages/ ./packages/
          cp -f ./_artifact/pnpm-lock.yaml ./pnpm-lock.yaml || true
          cp -f ./_artifact/pnpm-workspace.yaml ./pnpm-workspace.yaml || true
          rsync -a ./_artifact/.changeset/ ./.changeset/ || true

      - name: Verify pre mode is 'beta'
        run: |
          test -f .changeset/pre.json || { echo "::error::.changeset/pre.json missing. Refusing to publish (beta-only)."; exit 1; }
          TAG=$(jq -r '.tag // empty' .changeset/pre.json)
          MODE=$(jq -r '.mode // empty' .changeset/pre.json)
          echo "mode=$MODE tag=$TAG"
          [ "$MODE" = "pre" ] && [ "$TAG" = "beta" ] || { echo "::error::pre mode/tag check failed (mode=$MODE tag=$TAG). Refusing to publish."; exit 1; }

      - name: Configure npm auth (npmjs)
        run: |
          echo "::add-mask::$NPM_TOKEN"
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to NPM (dry run beta dist-tag)
        run: pnpm -w changeset publish --dry-run --tag beta -- --no-git-checks --report-summary
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_DRY_RUN: "true"

  publish-beta:
    if: needs.beta-release.outputs.has_changesets == 'true'
    runs-on: ubuntu-latest
    needs: [beta-release, test-prod, publish-beta-dry-run]
    environment: production # require manual approval for beta deployments
    steps:
      - name: Checkout versioned commit
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ needs.beta-release.outputs.version_commit }}
          fetch-depth: 0

      - name: Setup JS
        uses: ./.github/actions/js-setup

      - name: Download beta-release artifacts
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: beta-release-artifacts-${{ github.run_id }}
          path: _artifact

      - name: Overlay artifact snapshot
        run: |
          mkdir -p packages .changeset
          rsync -a --delete ./_artifact/packages/ ./packages/
          cp -f ./_artifact/pnpm-lock.yaml ./pnpm-lock.yaml || true
          cp -f ./_artifact/pnpm-workspace.yaml ./pnpm-workspace.yaml || true
          rsync -a ./_artifact/.changeset/ ./.changeset/ || true

      - name: Verify pre mode is 'beta'
        run: |
          test -f .changeset/pre.json || { echo "::error::.changeset/pre.json missing. Refusing to publish (beta-only)."; exit 1; }
          TAG=$(jq -r '.tag // empty' .changeset/pre.json)
          MODE=$(jq -r '.mode // empty' .changeset/pre.json)
          echo "mode=$MODE tag=$TAG"
          [ "$MODE" = "pre" ] && [ "$TAG" = "beta" ] || { echo "::error::pre mode/tag check failed (mode=$MODE tag=$TAG). Refusing to publish."; exit 1; }

      - name: Configure npm auth (npmjs)
        run: |
          echo "::add-mask::$NPM_TOKEN"
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to npm (beta dist-tag)
        run: pnpm -w changeset publish -- --no-git-checks --tag beta
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
