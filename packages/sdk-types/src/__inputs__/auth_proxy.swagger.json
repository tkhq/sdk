{
  "swagger": "2.0",
  "info": {
    "title": "services/auth_proxy/v1/proxy_api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "AuthProxyService"
    }
  ],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {},
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AddressFormat": {
      "type": "string",
      "enum": [
        "ADDRESS_FORMAT_UNCOMPRESSED",
        "ADDRESS_FORMAT_COMPRESSED",
        "ADDRESS_FORMAT_ETHEREUM",
        "ADDRESS_FORMAT_SOLANA",
        "ADDRESS_FORMAT_COSMOS",
        "ADDRESS_FORMAT_TRON",
        "ADDRESS_FORMAT_SUI",
        "ADDRESS_FORMAT_APTOS",
        "ADDRESS_FORMAT_BITCOIN_MAINNET_P2PKH",
        "ADDRESS_FORMAT_BITCOIN_MAINNET_P2SH",
        "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WPKH",
        "ADDRESS_FORMAT_BITCOIN_MAINNET_P2WSH",
        "ADDRESS_FORMAT_BITCOIN_MAINNET_P2TR",
        "ADDRESS_FORMAT_BITCOIN_TESTNET_P2PKH",
        "ADDRESS_FORMAT_BITCOIN_TESTNET_P2SH",
        "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WPKH",
        "ADDRESS_FORMAT_BITCOIN_TESTNET_P2WSH",
        "ADDRESS_FORMAT_BITCOIN_TESTNET_P2TR",
        "ADDRESS_FORMAT_BITCOIN_SIGNET_P2PKH",
        "ADDRESS_FORMAT_BITCOIN_SIGNET_P2SH",
        "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WPKH",
        "ADDRESS_FORMAT_BITCOIN_SIGNET_P2WSH",
        "ADDRESS_FORMAT_BITCOIN_SIGNET_P2TR",
        "ADDRESS_FORMAT_BITCOIN_REGTEST_P2PKH",
        "ADDRESS_FORMAT_BITCOIN_REGTEST_P2SH",
        "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WPKH",
        "ADDRESS_FORMAT_BITCOIN_REGTEST_P2WSH",
        "ADDRESS_FORMAT_BITCOIN_REGTEST_P2TR",
        "ADDRESS_FORMAT_SEI",
        "ADDRESS_FORMAT_XLM",
        "ADDRESS_FORMAT_DOGE_MAINNET",
        "ADDRESS_FORMAT_DOGE_TESTNET",
        "ADDRESS_FORMAT_TON_V3R2",
        "ADDRESS_FORMAT_TON_V4R2",
        "ADDRESS_FORMAT_TON_V5R1",
        "ADDRESS_FORMAT_XRP"
      ]
    },
    "v1ApiKeyCurve": {
      "type": "string",
      "enum": [
        "API_KEY_CURVE_P256",
        "API_KEY_CURVE_SECP256K1",
        "API_KEY_CURVE_ED25519"
      ]
    },
    "v1ApiKeyParamsV2": {
      "type": "object",
      "properties": {
        "apiKeyName": {
          "type": "string",
          "description": "Human-readable name for an API Key."
        },
        "publicKey": {
          "type": "string",
          "description": "The public component of a cryptographic key pair used to sign messages and transactions."
        },
        "curveType": {
          "$ref": "#/definitions/v1ApiKeyCurve",
          "description": "The curve type to be used for processing API key signatures."
        },
        "expirationSeconds": {
          "type": "string",
          "description": "Optional window (in seconds) indicating how long the API Key should last."
        }
      },
      "required": ["apiKeyName", "publicKey", "curveType"]
    },
    "v1Attestation": {
      "type": "object",
      "properties": {
        "credentialId": {
          "type": "string",
          "description": "The cbor encoded then base64 url encoded id of the credential."
        },
        "clientDataJson": {
          "type": "string",
          "description": "A base64 url encoded payload containing metadata about the signing context and the challenge."
        },
        "attestationObject": {
          "type": "string",
          "description": "A base64 url encoded payload containing authenticator data and any attestation the webauthn provider chooses."
        },
        "transports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AuthenticatorTransport"
          },
          "description": "The type of authenticator transports."
        }
      },
      "required": [
        "credentialId",
        "clientDataJson",
        "attestationObject",
        "transports"
      ]
    },
    "v1AuthenticatorParamsV2": {
      "type": "object",
      "properties": {
        "authenticatorName": {
          "type": "string",
          "description": "Human-readable name for an Authenticator."
        },
        "challenge": {
          "type": "string",
          "description": "Challenge presented for authentication purposes."
        },
        "attestation": {
          "$ref": "#/definitions/v1Attestation",
          "description": "The attestation that proves custody of the authenticator and provides metadata about it."
        }
      },
      "required": ["authenticatorName", "challenge", "attestation"]
    },
    "v1AuthenticatorTransport": {
      "type": "string",
      "enum": [
        "AUTHENTICATOR_TRANSPORT_BLE",
        "AUTHENTICATOR_TRANSPORT_INTERNAL",
        "AUTHENTICATOR_TRANSPORT_NFC",
        "AUTHENTICATOR_TRANSPORT_USB",
        "AUTHENTICATOR_TRANSPORT_HYBRID"
      ]
    },
    "v1Curve": {
      "type": "string",
      "enum": ["CURVE_SECP256K1", "CURVE_ED25519"]
    },
    "v1GetAccountResponse": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "string"
        }
      },
      "required": ["organizationId"]
    },
    "v1GetWalletKitConfigResponse": {
      "type": "object",
      "properties": {
        "facebookEnabled": {
          "type": "boolean"
        },
        "googleEnabled": {
          "type": "boolean"
        },
        "appleEnabled": {
          "type": "boolean"
        },
        "emailEnabled": {
          "type": "boolean"
        },
        "smsEnabled": {
          "type": "boolean"
        },
        "passkeyEnabled": {
          "type": "boolean"
        },
        "walletEnabled": {
          "type": "boolean"
        },
        "openOAuthInPage": {
          "type": "boolean"
        },
        "passkeySessionExpirationSeconds": {
          "type": "string"
        },
        "walletSessionExpirationSeconds": {
          "type": "string"
        },
        "organizationId": {
          "type": "string"
        }
      },
      "required": [
        "facebookEnabled",
        "googleEnabled",
        "appleEnabled",
        "emailEnabled",
        "smsEnabled",
        "passkeyEnabled",
        "walletEnabled",
        "openOAuthInPage",
        "passkeySessionExpirationSeconds",
        "walletSessionExpirationSeconds",
        "organizationId"
      ]
    },
    "v1InitOtpResponse": {
      "type": "object",
      "properties": {
        "otpId": {
          "type": "string",
          "description": "Unique identifier for an OTP authentication"
        }
      },
      "required": ["otpId"]
    },
    "v1OAuthLoginResponse": {
      "type": "object",
      "properties": {
        "session": {
          "type": "string",
          "description": "Signed JWT containing an expiry, public key, session type, user id, and organization id"
        }
      },
      "required": ["session"]
    },
    "v1OauthProviderParams": {
      "type": "object",
      "properties": {
        "providerName": {
          "type": "string",
          "description": "Human-readable name to identify a Provider."
        },
        "oidcToken": {
          "type": "string",
          "description": "Base64 encoded OIDC token"
        }
      },
      "required": ["providerName", "oidcToken"]
    },
    "v1OtpLoginResponse": {
      "type": "object",
      "properties": {
        "session": {
          "type": "string",
          "description": "Signed JWT containing an expiry, public key, session type, user id, and organization id"
        }
      },
      "required": ["session"]
    },
    "v1PathFormat": {
      "type": "string",
      "enum": ["PATH_FORMAT_BIP32"]
    },
    "v1SignupResponse": {
      "type": "object",
      "properties": {
        "organizationId": {
          "type": "string"
        }
      },
      "required": ["organizationId"]
    },
    "v1VerifyOtpResponse": {
      "type": "object",
      "properties": {
        "verificationToken": {
          "type": "string",
          "description": "Signed JWT containing a unique id, expiry, verification type, contact. Verification status of a user is updated when the token is consumed (in OTP_LOGIN requests)"
        }
      },
      "required": ["verificationToken"]
    },
    "v1WalletAccountParams": {
      "type": "object",
      "properties": {
        "curve": {
          "$ref": "#/definitions/v1Curve",
          "description": "Cryptographic curve used to generate a wallet Account."
        },
        "pathFormat": {
          "$ref": "#/definitions/v1PathFormat",
          "description": "Path format used to generate a wallet Account."
        },
        "path": {
          "type": "string",
          "description": "Path used to generate a wallet Account."
        },
        "addressFormat": {
          "$ref": "#/definitions/v1AddressFormat",
          "description": "Address format used to generate a wallet Acccount."
        }
      },
      "required": ["curve", "pathFormat", "path", "addressFormat"]
    },
    "v1WalletParams": {
      "type": "object",
      "properties": {
        "walletName": {
          "type": "string",
          "description": "Human-readable name for a Wallet."
        },
        "accounts": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1WalletAccountParams"
          },
          "description": "A list of wallet Accounts. This field, if not needed, should be an empty array in your request body."
        },
        "mnemonicLength": {
          "type": "integer",
          "format": "int32",
          "description": "Length of mnemonic to generate the Wallet seed. Defaults to 12. Accepted values: 12, 15, 18, 21, 24."
        }
      },
      "required": ["walletName", "accounts"]
    }
  }
}
