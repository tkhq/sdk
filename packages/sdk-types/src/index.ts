export enum SessionType {
  READ_ONLY = "SESSION_TYPE_READ_ONLY",
  READ_WRITE = "SESSION_TYPE_READ_WRITE",
}

export type Session = {
  sessionType: SessionType;
  userId: string;
  organizationId: string;
  expiry: number;
  token: string;
};

export type SessionResponse = {
  session: Session;
  user: {
    id: string;
    name: string;
    email: string;
    organizationId: string;
    organizationName: string;
  };
};

export enum TurnkeyErrorCodes {
  UNKNOWN = "UNKNOWN",
  NETWORK_ERROR = "NETWORK_ERROR",
  KEY_PAIR_CLEANUP_ERROR = "KEY_PAIR_CLEANUP_ERROR",
  LOGOUT_ERROR = "LOGOUT_ERROR",
  CREATE_PASSKEY_ERROR = "CREATE_PASSKEY_ERROR",
  SELECT_PASSKEY_CANCELLED = "SELECT_PASSKEY_CANCELLED",
  PASSKEY_SIGNUP_AUTH_ERROR = "PASSKEY_SIGNUP_AUTH_ERROR",
  PASSKEY_LOGIN_AUTH_ERROR = "PASSKEY_LOGIN_AUTH_ERROR",
  INIT_OTP_ERROR = "INIT_OTP_ERROR",
  VERIFY_OTP_ERROR = "VERIFY_OTP_ERROR",
  OTP_LOGIN_ERROR = "OTP_LOGIN_ERROR",
  OTP_SIGNUP_ERROR = "OTP_SIGNUP_ERROR",
  OTP_COMPLETION_ERROR = "OTP_COMPLETION_ERROR",
  OAUTH_LOGIN_ERROR = "OAUTH_LOGIN_ERROR",
  OAUTH_SIGNUP_ERROR = "OAUTH_SIGNUP_ERROR",
  ACCOUNT_FETCH_ERROR = "ACCOUNT_FETCH_ERROR",
  INVALID_OTP_CODE = "INVALID_OTP_CODE",
  FETCH_WALLETS_ERROR = "FETCH_WALLETS_ERROR",
  FETCH_WALLET_ACCOUNTS_ERROR = "FETCH_WALLET_ACCOUNTS_ERROR",
  SIGN_MESSAGE_ERROR = "SIGN_MESSAGE_ERROR",
  SIGN_TRANSACTION_ERROR = "SIGN_TRANSACTION_ERROR",
  FETCH_USER_ERROR = "FETCH_USERS_ERROR",
  CREATE_WALLET_ERROR = "CREATE_WALLET_ERROR",
  CREATE_WALLET_ACCOUNT_ERROR = "CREATE_WALLET_ACCOUNT_ERROR",
  EXPORT_WALLET_ERROR = "EXPORT_WALLET_ERROR",
  IMPORT_WALLET_ERROR = "IMPORT_WALLET_ERROR",
  DELETE_SUB_ORGANIZATION_ERROR = "DELETE_SUB_ORGANIZATION_ERROR",
  CREATE_SUB_ORGANIZATION_ERROR = "CREATE_SUB_ORGANIZATION_ERROR",
  STORE_SESSION_ERROR = "STORE_SESSION_ERROR",
  CLEAR_SESSION_ERROR = "CLEAR_SESSION_ERROR",
  CLEAR_ALL_SESSIONS_ERROR = "CLEAR_ALL_SESSIONS_ERROR",
  REFRESH_SESSION_ERROR = "REFRESH_SESSION_ERROR",
  GET_SESSION_ERROR = "GET_SESSION_ERROR",
  GET_ALL_SESSIONS_ERROR = "GET_ALL_SESSIONS_ERROR",
  SET_ACTIVE_SESSION_ERROR = "SET_ACTIVE_SESSION_ERROR",
  GET_ACTIVE_SESSION_KEY_ERROR = "GET_ACTIVE_SESSION_KEY_ERROR",
  CLEAR_UNUSED_KEY_PAIRS_ERROR = "CLEAR_UNUSED_KEY_PAIRS_ERROR",
  CREATE_API_KEY_PAIR_ERROR = "CREATE_API_KEY_PAIR_ERROR",
  GET_PROXY_AUTH_CONFIG_ERROR = "GET_PROXY_AUTH_CONFIG_ERROR",

  CLIENT_NOT_INITIALIZED = "CLIENT_NOT_INITIALIZED",
  INITIALIZE_CLIENT_ERROR = "INITIALIZE_CLIENT_ERROR",
  INITIALIZE_SESSION_ERROR = "INITIALIZE_SESSION_ERROR",
  SCHEDULE_SESSION_EXPIRY_ERROR = "SCHEDULE_SESSION_EXPIRY_ERROR",
  HANDLE_POST_AUTH_ERROR = "HANDLE_POST_AUTH_ERROR",
  HANDLE_POST_LOGOUT_ERROR = "HANDLE_POST_LOGOUT_ERROR",
  CLEAR_SESSION_TIMEOUTS_ERROR = "CLEAR_SESSION_TIMEOUTS_ERROR",

  BAD_RESPONSE = "BAD_RESPONSE",
  MISSING_PARAMS = "MISSING_PARAMS",
  INVALID_REQUEST = "INVALID_REQUEST",
  VALIDATION_ERROR = "VALIDATION_ERROR",
  SESSION_EXPIRED = "SESSION_EXPIRED",
  NO_SESSION_FOUND = "NO_SESSION_FOUND",
  NO_WALLETS_FOUND = "NO_WALLETS_FOUND",
  NOT_FOUND = "NOT_FOUND",
  INTERNAL_ERROR = "INTERNAL_ERROR",
  UNAUTHORIZED = "UNAUTHORIZED",
  FORBIDDEN = "FORBIDDEN",
  BAD_REQUEST = "BAD_REQUEST",
  CONFLICT = "CONFLICT",
  TIMEOUT = "TIMEOUT",
  SERVICE_UNAVAILABLE = "SERVICE_UNAVAILABLE",
  GATEWAY_TIMEOUT = "GATEWAY_TIMEOUT",
}

export class TurnkeyError extends Error {
  constructor(
    message: string,
    public code?: string,
    public cause?: unknown,
  ) {
    super(message);
    this.name = "TurnkeyError";
  }
}

export class TurnkeyNetworkError extends TurnkeyError {
  constructor(
    message: string,
    public statusCode?: number,
    code?: string,
    cause?: unknown,
  ) {
    super(message, code, cause);
    this.name = "TurnkeyNetworkError";
  }
}

export enum FiatOnRampProvider {
  COINBASE = "FIAT_ON_RAMP_PROVIDER_COINBASE",
  MOONPAY = "FIAT_ON_RAMP_PROVIDER_MOONPAY",
}

export enum FiatOnRampCryptoCurrency {
  BITCOIN = "FIAT_ON_RAMP_CRYPTO_CURRENCY_BTC",
  ETHEREUM = "FIAT_ON_RAMP_CRYPTO_CURRENCY_ETH",
  SOLANA = "FIAT_ON_RAMP_CRYPTO_CURRENCY_SOL",
  USDC = "FIAT_ON_RAMP_CRYPTO_CURRENCY_USDC",
}

export * from "./__generated__/types";
